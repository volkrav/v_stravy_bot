import logging

from aiogram import Dispatcher, types
from aiogram.dispatcher.filters import CommandStart, Text
from aiogram.dispatcher import FSMContext


from app.config import Config
from app.handlers import menu
from app.keyboards import inline, reply
from app.services import utils
from app.misc.states import Profile, Start


logger = logging.getLogger(__name__)

'''************************ –ö–õ–Ü–Ñ–ù–¢–°–¨–ö–ê –ß–ê–°–¢–ò–ù–ê ************************'''

'''************************ –°–¢–ê–†–¢–û–í–ï –í–Ü–ö–ù–û ************************'''


async def user_start(message: types.Message, state: FSMContext):
    current_state = await state.get_state()

    if await utils.check_user_in_users(message.from_user.id):
        user = await utils.get_user_data(message.from_user.id)
        name = user.name
    else:
        name = message.from_user.first_name

    try:
        bot = message.bot
        answer = '–û–±–∏—Ä–∞–π—Ç–µ –ø–æ—Ç—Ä—ñ–±–Ω–∏–π —Ä–æ–∑–¥—ñ–ª ‚§µÔ∏è'
        if current_state == None:
            answer = f'–í—ñ—Ç–∞—é, {name}.\n\n' + answer
        await utils.delete_inline_keyboard(bot, message.from_user.id)
        await Start.free.set()

        await bot.send_message(chat_id=message.from_user.id,
                               text=answer,
                               reply_markup=reply.kb_start
                               )
    except:
        config: Config = bot.get('config')
        await message.answer(f'–°–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è –∑ –±–æ—Ç–æ–º —á–µ—Ä–µ–∑ –ü–ü, '
                             f'–Ω–∞–ø–∏—à—ñ—Ç—å –π–æ–º—É: \n{config.tg_bot.bot_url}',)


async def command_menu(message: types.Message, state: FSMContext):
    await Start.free.set()
    await message.bot.send_message(chat_id=message.from_user.id,
                                   text='–ú–µ–Ω—é',
                                   reply_markup=reply.kb_catalog)
    await menu.list_categories(message, state)


async def command_about(message: types.Message):
    await Start.free.set()

    with open('about.txt', 'r') as file:
        answer = file.read()
    await message.bot.send_message(chat_id=message.from_user.id,
                                   text=answer)


async def command_contacts(message: types.Message, state: FSMContext):
    current_state = await state.get_state()
    if current_state == None:
        await Start.free.set()
    await message.bot.send_message(chat_id=message.from_user.id,
                                   text='<b>–ì–†–ò–õ–¨-–ë–ê–† "–ú–ò–°–õ–ò–í–¶–Ü"</b>\n\n' +
                                   'üó∫ –ê–¥—Ä–µ—Å–∞: –º. –ö–∏—ó–≤, –≤—É–ª. –®–æ–≤–∫–æ–≤–∏—á–Ω–∞ 13/2\n' +
                                   'üìû –¢–µ–ª–µ—Ñ–æ–Ω: +38 (063) 014-20-60\n' +
                                   '‚úâÔ∏è E-mail: barohotnikk@ukr.net\n',
                                   reply_markup=inline.kb_about)


async def command_delivery(message: types.Message, state: FSMContext):
    current_state = await state.get_state()
    if current_state == None:
        await Start.free.set()
    await message.bot.send_message(chat_id=message.from_user.id,
                                   text='–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –¥–æ—Å—Ç–∞–≤–ª—è—î–º–æ –ø–æ –≤—ñ–≤—Ç–æ—Ä–∫–∞—Ö —Ç–∞ –ø\'—è—Ç–Ω–∏—Ü—è—Ö.\n\n' +
                                   '–í–∞—Ä—Ç—ñ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏:\n' +
                                   'üöö –ö—É—Ä\'—î—Ä–æ–º (–¶–µ–Ω—Ç—Ä, –ü–æ–¥—ñ–ª, –î–∞—Ä–Ω–∏—Ü—å–∫–∏–π‚Äã): 150–≥—Ä–Ω.\n' +
                                   'üöö –ö—É—Ä\'—î—Ä–æ–º (–ö–∏—ó–≤‚Äã, —ñ–Ω—à—ñ —Ä–∞–π–æ–Ω–∏): 180–≥—Ä–Ω.\n\n' +
                                   '<b>–ü—Ä–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—ñ –≤—ñ–¥ 800 –≥—Ä–Ω - –¥–æ—Å—Ç–∞–≤–∫–∞ (–ö–∏—ó–≤) –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ</b>\n'
                                   )


async def command_location(message: types.Message, state: FSMContext):
    current_state = await state.get_state()
    if current_state == None:
        await Start.free.set()
    await message.bot.send_message(chat_id=message.from_user.id,
                                   text='–°–∞–º–æ—Å—Ç—ñ–π–Ω–æ –∑–∞–±—Ä–∞—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –º–æ–∂–Ω–∞ –∑–∞ –∞–¥—Ä–µ—Å–æ—é:\n\n'
                                   '–º. –ö–∏—ó–≤, –≤—É–ª. –®–æ–≤–∫–æ–≤–∏—á–Ωa 13/2.\n'
                                   '–ì—Ä–∏–ª—å-–±–∞—Ä "–ú–∏—Å–ª–∏–≤—Ü—ñ"\n\n'
                                   '<b>–ó–Ω–∏–∂–∫–∞ –ø—Ä–∏ —Å–∞–º–æ–≤–∏–≤–æ–∑—ñ -10%</b>')


async def unsupported_command(message: types.Message):
    try:
        await utils.delete_inline_keyboard(message.bot, message.from_user.id)
    except Exception as err:
        logger.error(
            f'unsupported_command BAD {message.from_user.id} get {err.args}')
    logger.error(
        f'unsupported_command BAD {message.from_user.id} unsupported command {message.text}')
    await message.bot.send_message(chat_id=message.from_user.id,
                                   text='–í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É.\n' +
                                   '–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ, –±—É–¥—å –ª–∞—Å–∫–∞, –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É ‚å®Ô∏è‚§µÔ∏è',
                                   reply_markup=reply.kb_start)


def register_user(dp: Dispatcher):
    dp.register_message_handler(user_start, Text(equals=['start', '–∑–∞–º–æ–≤–∏—Ç–∏'],
                                                 ignore_case=True), state='*')
    dp.register_message_handler(user_start, CommandStart(), state='*')
    dp.register_message_handler(command_menu,
                                Text(equals='–ú–µ–Ω—é',
                                     ignore_case=True),
                                state=[Start.free, None])
    dp.register_message_handler(command_about,
                                Text(equals='‚ÑπÔ∏è –ü—Ä–æ –Ω–∞—Å',
                                     ignore_case=True),
                                state=[Start.free, None]
                                )
    dp.register_message_handler(command_contacts,
                                Text(equals='üìû –ö–æ–Ω—Ç–∞–∫—Ç–∏',
                                     ignore_case=True),
                                state=[Start.free, None])
    dp.register_message_handler(command_delivery,
                                Text(equals='üöö –î–æ—Å—Ç–∞–≤–∫–∞ —ñ –æ–ø–ª–∞—Ç–∞',
                                     ignore_case=True),
                                state=[Start.free, None])
    dp.register_message_handler(command_location,
                                Text(equals='üí™ –°–∞–º–æ–≤–∏–≤—ñ–∑',
                                     ignore_case=True),
                                state=[Start.free, None])
    dp.register_message_handler(unsupported_command,
                                state=[Start.free])
