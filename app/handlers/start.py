from unicodedata import category
from aiogram import Dispatcher, types
from aiogram.dispatcher.filters import CommandStart, Text

from app.config import Config
from app.handlers.menu import list_categories
from app.keyboards import reply, inline

'''************************ –ö–õ–Ü–Ñ–ù–¢–°–¨–ö–ê –ß–ê–°–¢–ò–ù–ê ************************'''

'''************************ –°–¢–ê–†–¢–û–í–ï –í–Ü–ö–ù–û ************************'''


async def user_start(message: types.Message):
    try:
        bot = message.bot

        await bot.send_message(message.from_user.id,
                               f'–°–º–∞—á–Ω–æ–≥–æ\n\n'
                               f'–û–±–∏—Ä–∞–π—Ç–µ –ø–æ—Ç—Ä—ñ–±–Ω–µ ‚§µÔ∏è',
                               reply_markup=reply.kb_start
                               )
    except:
        config: Config = bot.get('config')
        await message.answer(f'–°–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è –∑ –±–æ—Ç–æ–º —á–µ—Ä–µ–∑ –ü–ü, '
                             f'–Ω–∞–ø–∏—à—ñ—Ç—å –π–æ–º—É: \n{config.tg_bot.bot_url}',)


async def command_delivery(message: types.Message):
    await message.answer('–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –¥–æ—Å—Ç–∞–≤–ª—è—î–º–æ –ø–æ –≤—ñ–≤—Ç–æ—Ä–∫–∞—Ö —Ç–∞ –ø\'—è—Ç–Ω–∏—Ü—è—Ö.\n\n' +
                         '–í–∞—Ä—Ç—ñ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏:\n' +
                         'üöö –ö—É—Ä\'—î—Ä–æ–º (–¶–µ–Ω—Ç—Ä, –ü–æ–¥—ñ–ª, –î–∞—Ä–Ω–∏—Ü—å–∫–∏–π‚Äã): 150–≥—Ä–Ω.\n' +
                         'üöö –ö—É—Ä\'—î—Ä–æ–º (–ö–∏—ó–≤‚Äã, —ñ–Ω—à—ñ —Ä–∞–π–æ–Ω–∏): 180–≥—Ä–Ω.\n\n' +
                         '<b>–ü—Ä–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—ñ –≤—ñ–¥ 800 –≥—Ä–Ω - –¥–æ—Å—Ç–∞–≤–∫–∞ (–ö–∏—ó–≤) –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ</b>\n'
                         )


async def command_location(message: types.Message):
    await message.answer('–º. –ö–∏—ó–≤, –≤—É–ª. –®–æ–≤–∫–æ–≤–∏—á–Ωa 13/2.\n'
                         '–ì—Ä–∏–ª—å-–±–∞—Ä "–ú–∏—Å–ª–∏–≤—Ü—ñ"')


async def command_menu(message: types.Message):
    await message.bot.send_message(message.from_user.id,
                                   '–ú–µ–Ω—é',
                                   reply_markup=reply.kb_catalog)
    await list_categories(message)


# async def command_show_item(call: types.CallbackQuery, callback_data: dict):
#     await list_products(call, callback_data['category'])


def register_user(dp: Dispatcher):
    dp.register_message_handler(user_start, Text(equals=['start', '–∑–∞–º–æ–≤–∏—Ç–∏'],
                                                 ignore_case=True))
    dp.register_message_handler(user_start, CommandStart())
    dp.register_message_handler(command_delivery, Text(equals='üöö –î–æ—Å—Ç–∞–≤–∫–∞ —ñ –æ–ø–ª–∞—Ç–∞',
                                                       ignore_case=True))
    dp.register_message_handler(command_location, Text(equals='–†–æ–∑—Ç–∞—à—É–≤–∞–Ω–Ω—è',
                                                       ignore_case=True))
    dp.register_message_handler(command_menu, Text(equals='–ú–µ–Ω—é',
                                                   ignore_case=True))
    # dp.register_callback_query_handler(
    #     command_show_item, inline.menu_cd.filter())
